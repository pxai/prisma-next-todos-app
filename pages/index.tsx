import Head from 'next/head'
import type { GetServerSideProps } from 'next';
import prisma from '../lib/prisma';
import styles from '../styles/Home.module.css'
import Layout from '../components/Layout';
import TodoCard, { TodoProps } from '../components/Todo';
import AddTodo from '../components/AddTodo';
import { useState } from 'react';

type Props = {
  todos: TodoProps[]
}
export default function Home(props: Props) {
  const [todos, setTodos] = useState(props.todos);
  async function deleteTodo(id: string) {
    console.log("Deleting todo!: ", id)
    let response = await fetch('/api/todo/' + id, {
        method: "DELETE"
    });
    response = await response.json();
    if (response) {
        // remove the todos from the list of todos.
        setTodos(
            todos.filter(todo => todo.id !== id)
        );
    }
  }

  function addTodo(todo: TodoProps) {
    setTodos([...todos, todo]);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Prisma Next ToDo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout >
        <h1>
          Next.js ToDo example
        </h1>
        <AddTodo  addTodo= { addTodo } />
        <div>
          {
            todos.map((todo) => (
              <TodoCard key= { todo.id } todo = { todo } deleteTodo = { deleteTodo } />
              ))
          }
        </div>
      </Layout>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const todos = await prisma.todo.findMany({
  });

  return {
      props: { todos },
  }
}

/*export const getStaticProps: GetStaticProps = async () => {
  const feed = await prisma.post.findMany({
    where: { published: true },
    include: {
      author: {
        select: { name: true },
      },
    },
  });
  return {
    props: { feed },
    revalidate: 10,
  };
};*/
